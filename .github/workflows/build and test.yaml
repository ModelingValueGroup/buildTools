name: build and test
on:
  push:

jobs:
  #########################################################################################################
  build:
    runs-on: [ubuntu-latest]
    steps:
      - name: "checkout"
        uses: actions/checkout@v1

      - name: "attach head"
        run: git checkout "${GITHUB_REF#refs/heads/}"

      - name: "setup JDK"
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: "get generic info"
        uses: ModelingValueGroup/generic-info@master

      - name: "prepare ant"
        run:  |
          cat <<EOF >build.properties
          jdk.home.11=$JAVA_HOME
          path.variable.maven_repository=$HOME/.m2/repository
          EOF
          sed -i 's/filesetmanifest="mergewithoutmain"/filesetmanifest="merge"/' build.xml

      - name: "ant build"
        run: |
          rm -rf out
          ant
          cp out/artifacts/buildTools.jar ~

      - name: "if master: fail if there is already a tag for this version"
        if: github.ref == 'refs/heads/master'
        run:  |
          . <(java -jar ~/buildTools.jar)
          errorIfVersionTagExists

      - name: "generate/adjust some files if needed"
        run: |
          . <(java -jar ~/buildTools.jar)
          generateAll
          correctEols
          correctHeaders header

      - name: "push changes back to github"
        run:  |
          . <(java -jar ~/buildTools.jar)
          pushBackToGithub "${{ secrets.GITHUB_TOKEN }}" "automation@modelingvalue.com" "adjusted files [by github actions]"

      - name: "ant build again (in case something was adjusted in previous step)"
        run: |
          rm -rf out
          ant

      - name: "publish action-artifact buildTools.jar"
        uses: actions/upload-artifact@v1
        with:
          name: buildTools.jar
          path: out/artifacts/buildTools.jar

      - name: "test"
        run: shellTools/tst/test.sh
        env:
          INPUT_TOKEN:  "${{ secrets.GITHUB_TOKEN }}"

      - name: "if master: tag with version"
        if: github.ref == 'refs/heads/master'
        run:  |
          . <(java -jar ~/buildTools.jar)
          setVersionTag "${{ secrets.GITHUB_TOKEN }}" "automation@modelingvalue.com"
          . <(catProjectSh '')
          echo '::set-env name=version::$version'

      - name: "if master: upload as package"
        uses: ModelingValueGroup/upload-maven-package-action@master
        if: github.ref == 'refs/heads/master'
        with:
          file: "out/artifacts/buildTools.jar"
          token: "${{ secrets.GITHUB_TOKEN }}"

      - name: "if master: upload release"
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          upload_url: "https://github.com/${{ env.GITHUB_REPOSITORY }}/releases/tag/v${{ env.version }}"
          asset_path: out/artifacts/buildTools.jar
          asset_name: buildTools.jar
          asset_content_type: application/java-archive
