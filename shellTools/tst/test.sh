#!/usr/bin/env bash
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## (C) Copyright 2018-2019 Modeling Value Group B.V. (http://modelingvalue.org)                                        ~
##                                                                                                                     ~
## Licensed under the GNU Lesser General Public License v3.0 (the 'License'). You may not use this file except in      ~
## compliance with the License. You may obtain a copy of the License at: https://choosealicense.com/licenses/lgpl-3.0  ~
## Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on ~
## an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the  ~
## specific language governing permissions and limitations under the License.                                          ~
##                                                                                                                     ~
## Maintainers:                                                                                                        ~
##     Wim Bast, Carel Bast, Tom Brus                                                                                  ~
## Contributors:                                                                                                       ~
##     Arjan Kok, Ronald Krijgsheld                                                                                    ~
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

set -euo pipefail

if [[ "${GITHUB_WORKSPACE:-}" == "" ]]; then
  ##### mimic github actions env for local execution:
  # shellcheck disable=SC1090
  . ~/secrets.sh # defines INPUT_TOKEN without expsong it in the github repos
  if [[ "${INPUT_TOKEN:-}" == "" ]]; then
    echo ":error:: local test runs require a file ~/sercrets.sh that defines at least INPUT_TOKEN"
    exit 67
  fi
  GITHUB_WORKSPACE="$PWD"
  # shellcheck disable=SC2034
  GITHUB_REPOSITORY="ModelingValueGroup/buildTools"

  ##### read all scripts
  for f in "$GITHUB_WORKSPACE/src/"*.sh; do
    # shellcheck disable=SC1090
    . "$f"
  done

  if [[ "$(command -v md5)" != "" && "$(command -v md5sum)" == "" ]]; then
    md5sum() { md5; }
  fi
else
  . buildTools.sh # read the file generated by the build action
fi

##### make tmp dir
tmp=./tmp
rm -rf $tmp
mkdir $tmp
cd $tmp


##### tests
test_00() {
  downloadArtifactQuick "$INPUT_TOKEN" "com.modelingvalue" "buildTools" "1.0.4" "sh" "."
  local sum="$(md5sum < buildTools.sh | sed 's/ .*//')"
  local exp="da493bbcf960af426c47a51f876395d0"
  if [[ "$sum" != "$exp" ]]; then
    echo "::error::downloadArtifactQuick failed (md5sum unexpected: $sum and $exp expected)"
    exit 65
  fi
  rm buildTools.sh
}
test_01() {
  downloadArtifact "$INPUT_TOKEN" "com.modelingvalue" "buildTools" "1.0.4" "sh" "."
  local sum="$(md5sum < buildTools.sh | sed 's/ .*//')"
  local exp="da493bbcf960af426c47a51f876395d0"
  if [[ "$sum" != "$exp" ]]; then
    echo "::error::downloadArtifact failed (md5sum unexpected: $sum and $exp expected)"
    exit 65
  fi
  rm buildTools.sh
}

##### test execution:
group test_00
group test_01

##### ok if we end up here
echo ok
