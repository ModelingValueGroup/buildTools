<?xml version="1.0" encoding="UTF-8"?>
<project name="module_shelltools" default="compile.module.shelltools">
  <dirname property="module.shelltools.basedir" file="${ant.file.module_shelltools}"/>
  
  <property name="module.jdk.home.shelltools" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.shelltools" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.shelltools" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.shelltools" value="-encoding UTF-8 -source 11 -target 11 ${compiler.args}"/>
  
  <property name="shelltools.output.dir" value="${module.shelltools.basedir}/../out/production/shellTools"/>
  <property name="shelltools.testoutput.dir" value="${module.shelltools.basedir}/../out/test/shellTools"/>
  
  <path id="shelltools.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="shelltools.module.production.classpath">
    <path refid="${module.jdk.classpath.shelltools}"/>
  </path>
  
  <path id="shelltools.runtime.production.module.classpath">
    <pathelement location="${shelltools.output.dir}"/>
  </path>
  
  <path id="shelltools.module.classpath">
    <path refid="${module.jdk.classpath.shelltools}"/>
    <pathelement location="${shelltools.output.dir}"/>
  </path>
  
  <path id="shelltools.runtime.module.classpath">
    <pathelement location="${shelltools.testoutput.dir}"/>
    <pathelement location="${shelltools.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.shelltools">
    <patternset refid="ignored.files"/>
    <exclude name="unfinished/**"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.shelltools">
    <patternset refid="excluded.from.module.shelltools"/>
  </patternset>
  
  <path id="shelltools.module.sourcepath">
    <dirset dir="${module.shelltools.basedir}">
      <include name="src"/>
      <include name="res"/>
    </dirset>
  </path>
  
  <path id="shelltools.module.test.sourcepath">
    <dirset dir="${module.shelltools.basedir}">
      <include name="tst"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.shelltools" depends="compile.module.shelltools.production,compile.module.shelltools.tests" description="Compile module shellTools"/>
  
  <target name="compile.module.shelltools.production" description="Compile module shellTools; production classes">
    <mkdir dir="${shelltools.output.dir}"/>
    <javac destdir="${shelltools.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.shelltools}/javac">
      <compilerarg line="${compiler.args.shelltools}"/>
      <bootclasspath refid="shelltools.module.bootclasspath"/>
      <classpath refid="shelltools.module.production.classpath"/>
      <src refid="shelltools.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.shelltools"/>
    </javac>
    
    <copy todir="${shelltools.output.dir}">
      <fileset dir="${module.shelltools.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.shelltools.basedir}/res">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.shelltools.tests" depends="compile.module.shelltools.production" description="compile module shellTools; test classes" unless="skip.tests">
    <mkdir dir="${shelltools.testoutput.dir}"/>
    <javac destdir="${shelltools.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.shelltools}/javac">
      <compilerarg line="${compiler.args.shelltools}"/>
      <bootclasspath refid="shelltools.module.bootclasspath"/>
      <classpath refid="shelltools.module.classpath"/>
      <src refid="shelltools.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.shelltools"/>
    </javac>
    
    <copy todir="${shelltools.testoutput.dir}">
      <fileset dir="${module.shelltools.basedir}/tst">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.shelltools" description="cleanup module">
    <delete dir="${shelltools.output.dir}"/>
    <delete dir="${shelltools.testoutput.dir}"/>
  </target>
</project>